#c
plot(predict(fit),residuals(fit))
hist(residuals(fit))
#Tehtävä 3
confint(fit)
#Ei voida hylätä
#Tehtävä 4
y2<-c(76,72,89,144,158,92,156,109,138,100,51,107,129,65,121)
z2<-c(21.6,24.2,23.1,23.6,27.1,22.2,26.0,23.3,25.8,24.4,21.8,23.8,22.9,21.8,25.2)
plot(z2,y2)
#x näyttäisi paremmalta selittäjältä.
#Tehtävä 5
#a
valkoisia_korissa<-sample(0:5, 1000000, replace=T )
#b
valkoisia_nostettu<-rbinom(1000000, 7, valkoisia_korissa/5)
#c
otokset<-valkoisia_korissa[valkoisia_nostettu==2]
table(otokset)/length(otokset)
#Tehtävä 6
#a
rbern<- function(n, prob){
tulos<-rbinom(n,1,prob)
return(tulos)
}
kielit <- rbern(3222,1/2)
n <- sum(kielit==1)
aktiiviset <- numeric(n)
for(i in 1:n) {
if(kielit[i] == 1) {
aktiiviset[i] <- rbern(1,kieliaktiv)
} else {
aktiiviset[i] <- rbern(1,muuaktiv)
}
}
tutkimussimulaatio <- function(n){ a <- sum(kielit * aktiiviset)
b <- a/sum(aktiiviset)
return(b)
}
tutkimussimulaatio<-
n <- 1000000
doupatut <- rbinom(n=n, size=1, prob=0.01)
positiiviset <- numeric(n)
for(i in 1:n) {
if(doupatut[i] == 1) {
positiiviset[i] <- rbinom(n=1, size=1, prob=0.98)
} else {
positiiviset[i] <- rbinom(n=1, size=1, prob=1-0.95)
}
}
tutkimussimulaatio(1)
tutkimussimulaatio(1)
tutkimussimulaatio<-
n <- 1000000
doupatut <- rbinom(n=n, size=1, prob=0.01)
positiiviset <- numeric(n)
for(i in 1:n) {
if(doupatut[i] == 1) {
positiiviset[i] <- rbinom(n=1, size=1, prob=0.98)
} else {
positiiviset[i] <- rbinom(n=1, size=1, prob=1-0.95)
}
}
tutkimussimulaatio(1)
n <- round(runif(1,1,10000),digits=0)
kielitutkimus <- rbinom(n=n, size=1, prob=(1/2)*(166/(166+703)))
aktiiviset <- numeric(n)
for(i in 1:n) {
if (kielitutkimus[i]==1) {
aktiiviset[i] <- rbinom(n=1, size=1, prob=(1/2)*(166/(166+703)))
} else {
aktiiviset[i] <- rbinom(n=1, size=1, prob=(1/2)*(199/(199+2154)))
}
}
kielitutkimus(2)
summary(fit)
plot(predict(fit),residuals(fit))
hist(residuals(fit))
plot(predict(fit),residuals(fit))
hist(residuals(fit))
plot(predict(fit),residuals(fit))
HSL<-read.csv2(file="R_materiaali.csv", stringsAsFactors=F)
setwd("C:/Users/Tommy/Desktop")
HSL<-read.csv2(file="R_materiaali.csv", stringsAsFactors=F)
summamuuttuja<-function(a, data, max_puuttuvat=1){
data<-data.frame(data)
sarake<-subset(data, select=a)
sarake2<-apply(sarake, 1, mean, na.rm=T)
tulos<-as.vector(sarake2)
return(tulos)
}
#Tehtävä 1
HSL<-read.csv2(file="R_materiaali.csv", stringsAsFactors=F)
HSL$tyyt_kulj <- summamuuttuja(c("K1A1", "K1A2", "K1A3"),data = HSL, max_puuttuvat = 1)
mean(HSL$tyyt_kulj, na.rm=T)
sd(HSL$tyyt_kulj, na.rm=T)
hist(HSL$tyyt_kulj, col="beige")
table(HSL$tyyt_kulj)
hist(HSL$tyyt_kulj, col="beige", breaks=14)
HSL$tyytyvaisyys<- summamuuttuja (c ("K1A4", "K1A5", "K1A6", "K2A2", "K2A3", "K2A4", "K2A5", "K2A6"), data=HSL, max_puuttuvat=5)
hist(HSL$tyytyvaisyys)
quantile(HSL$tyytyvaisyys, na.rm=T)
median(HSL$tyytyvaisyys, na.rm=T)
boxplot(HSL$tyytyvaisyys, col="orange")
HSL$T17<-as.factor(HSL$T17)
mean(HSL$tyytyvaisyys[HSL$T17==1], na.rm=T)
mean(HSL$tyytyvaisyys[HSL$T17==2], na.rm=T)
boxplot(HSL$tyytyvaisyys[HSL$T17==1], col="red")
boxplot(HSL$tyytyvaisyys[HSL$T17==2], col="blue")
HSL$ALUE<-as.factor(HSL$ALUE)
levels(HSL$ALUE)<-c("Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Seutu")
table(HSL$K1A3, HSL$ALUE)
round((prop.table(table(HSL$K1A3, HSL$ALUE), 1)), digits=2)
t.test(HSL$K1A3[HSL$ALUE=="Sisäinen"],HSL$K1A3[HSL$ALUE=="Seutu"], var.equal = T)
mean(HSL$K1A3[HSL$ALUE=="Sisäinen"], na.rm=T)
mean(HSL$K1A3[HSL$ALUE=="Seutu"], na.rm=T)
HSL$kuukausi<-(HSL$PAIVAMAARA)
HSL$kuukausi<-as.Date(HSL$kuukausi, "%d.%m.%Y")
HSL$kuukausi<-as.numeric(format(HSL$kuukausi, "%m"))
KeskiarvoJaVali<-function(x, p){
je<-mean(x, na.rm=T)
jee<-mean(x, na.rm=T)-(qt(1-p, df=(length(x)-1))*sd(x, na.rm=T)/sqrt(length(x)))
jeee<- mean(x, na.rm=T)+(qt(1-p, df=(length(x)-1))*sd(x, na.rm=T)/sqrt(length(x)))
tulos<-as.vector(c(je, jee, jeee))
return(tulos)
}
KeskiarvoJaVali(k1, 0.05)
KeskiarvoJaVali(k2, 0.05)
KeskiarvoJaVali(k3, 0.05)
KeskiarvoJaVali(k4, 0.05)
KeskiarvoJaVali(k5, 0.05)
KeskiarvoJaVali(k6, 0.05)
KeskiarvoJaVali(k7, 0.05)
KeskiarvoJaVali(k8, 0.05)
KeskiarvoJaVali(k9, 0.05)
KeskiarvoJaVali(k10, 0.05)
KeskiarvoJaVali(k11, 0.05)
kk1<-KeskiarvoJaVali(k1, 0.05)
kk2<-KeskiarvoJaVali(k2, 0.05)
kk3<-KeskiarvoJaVali(k3, 0.05)
kk4<-KeskiarvoJaVali(k4, 0.05)
kk5<-KeskiarvoJaVali(k5, 0.05)
kk6<-KeskiarvoJaVali(k6, 0.05)
kk7<-KeskiarvoJaVali(k7, 0.05)
kk8<-KeskiarvoJaVali(k8, 0.05)
kk9<-KeskiarvoJaVali(k9, 0.05)
kk10<-KeskiarvoJaVali(k10, 0.05)
kk11<-KeskiarvoJaVali(k11, 0.05)
KeskiarvoJaVali(k1, 0.05)
KeskiarvoJaVali(k2, 0.05)
KeskiarvoJaVali(k3, 0.05)
KeskiarvoJaVali(k4, 0.05)
KeskiarvoJaVali(k5, 0.05)
KeskiarvoJaVali(k6, 0.05)
KeskiarvoJaVali(k7, 0.05)
KeskiarvoJaVali(k8, 0.05)
KeskiarvoJaVali(k9, 0.05)
KeskiarvoJaVali(k10, 0.05)
KeskiarvoJaVali(k11, 0.05)
k1<-(Linja8[Linja8$kuukausi==1,])$tyytyvaisyys
k2<-(Linja8[Linja8$kuukausi==2,])$tyytyvaisyys
k3<-(Linja8[Linja8$kuukausi==3,])$tyytyvaisyys
k4<-(Linja8[Linja8$kuukausi==4,])$tyytyvaisyys
k5<-(Linja8[Linja8$kuukausi==5,])$tyytyvaisyys
k6<-(Linja8[Linja8$kuukausi==6,])$tyytyvaisyys
k7<-(Linja8[Linja8$kuukausi==7,])$tyytyvaisyys
k8<-(Linja8[Linja8$kuukausi==8,])$tyytyvaisyys
k9<-(Linja8[Linja8$kuukausi==9,])$tyytyvaisyys
k10<-(Linja8[Linja8$kuukausi==10,])$tyytyvaisyys
k11<-(Linja8[Linja8$kuukausi==11,])$tyytyvaisyys
Linja8<-HSL[HSL$LINJA==8,]
k1<-(Linja8[Linja8$kuukausi==1,])$tyytyvaisyys
k2<-(Linja8[Linja8$kuukausi==2,])$tyytyvaisyys
k3<-(Linja8[Linja8$kuukausi==3,])$tyytyvaisyys
k4<-(Linja8[Linja8$kuukausi==4,])$tyytyvaisyys
k5<-(Linja8[Linja8$kuukausi==5,])$tyytyvaisyys
k6<-(Linja8[Linja8$kuukausi==6,])$tyytyvaisyys
k7<-(Linja8[Linja8$kuukausi==7,])$tyytyvaisyys
k8<-(Linja8[Linja8$kuukausi==8,])$tyytyvaisyys
k9<-(Linja8[Linja8$kuukausi==9,])$tyytyvaisyys
k10<-(Linja8[Linja8$kuukausi==10,])$tyytyvaisyys
k11<-(Linja8[Linja8$kuukausi==11,])$tyytyvaisyys
KeskiarvoJaVali(k1, 0.05)
KeskiarvoJaVali(k2, 0.05)
KeskiarvoJaVali(k3, 0.05)
KeskiarvoJaVali(k4, 0.05)
KeskiarvoJaVali(k5, 0.05)
KeskiarvoJaVali(k6, 0.05)
KeskiarvoJaVali(k7, 0.05)
KeskiarvoJaVali(k8, 0.05)
KeskiarvoJaVali(k9, 0.05)
KeskiarvoJaVali(k10, 0.05)
KeskiarvoJaVali(k11, 0.05)
kk1<-KeskiarvoJaVali(k1, 0.05)
kk2<-KeskiarvoJaVali(k2, 0.05)
kk3<-KeskiarvoJaVali(k3, 0.05)
kk4<-KeskiarvoJaVali(k4, 0.05)
kk5<-KeskiarvoJaVali(k5, 0.05)
kk6<-KeskiarvoJaVali(k6, 0.05)
kk7<-KeskiarvoJaVali(k7, 0.05)
kk8<-KeskiarvoJaVali(k8, 0.05)
kk9<-KeskiarvoJaVali(k9, 0.05)
kk10<-KeskiarvoJaVali(k10, 0.05)
kk11<-KeskiarvoJaVali(k11, 0.05)
plot(NULL, xlim=c(0,11), ylim=c(0,5))
points(c(1,2,3,4,5,6,7,8,9,10,11), c(mean(k1), mean(k2), mean(k3), mean(k4), mean(k5),
mean(k6), mean(k7), mean(k8), mean(k9), mean(k10), mean(k11)))
#Tehtävä 1
getwd()
#a
subset(data, muuttujat==)
#b
HSL<-read.csv2(file="R_materiaali.csv", stringsAsFactors=F)
#Tehtävä 2
HSL$ALUE<-as.factor(HSL$ALUE)
levels(HSL$ALUE)<-c("Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Sisäinen", "Seutu")
#b
table(HSL$K1A3, HSL$ALUE)
round((prop.table(table(HSL$K1A3, HSL$ALUE), 1)), digits=2)
#c
t.test(HSL$K1A3[HSL$ALUE=="Sisäinen"],HSL$K1A3[HSL$ALUE=="Seutu"], var.equal = T)
mean(HSL$K1A3[HSL$ALUE=="Sisäinen"], na.rm=T)
mean(HSL$K1A3[HSL$ALUE=="Seutu"], na.rm=T)
#H0 hylätään merkitevyystasolla 0.05. Keskiarvot siis poikkeavat tilastollisesti merkitsevästi toisistaan.
#Seutumatkustajat ovat keskimäärin enemmän sitä mieltä, että "kuljettajien ajotapa on miellyttävä ja sujuva." Edellisen
# kohdan riviprosenttien perusteella on huomattavissa, että oikeastaan sekä kaikkia arvosanoja esiintyy prosentuaalisesti
#enemmän sisäisillä matkustajilla. Tämä toki johtuu siitä, että heitä on vastaajissa enemmän ylipäänsä. Tämä ei
#selitä eroja keskiarvoissa.Kuitenkin hyviä arvoja ovat antaneet seutulaiset enemmän. Ehkä seutulinjoilla on vähemmän mm.
#liikenteestä johtuvia pysähdyksiä ja ajaminen on muutenkin sujuvaa, kun ei olla ahtaalla kaupunkialueella.
HSL<-read.csv2(file="R_materiaali.csv", stringsAsFactors=F)
HSL$kuukausi<-(HSL$PAIVAMAARA)
luku<-5
luku
luku<-5
luku
kissa<-7
yhdiste<-c(luku, kissa)
mean(kissa, luku)
mean(yhdiste)
0:6
yhdiste[2]
yhdiste[3]
luku<-c(7,9,7,6)
luku
mean(luku)
?
??
luku
??
luku
?? mean
luku[3,4]
luku[c(3,4)]
luku[1:2]
luku.length()
length(luku)
matriisi<-(c(1,2,3,4,5,6,7,8,9), ncol=3, nrow=3, byrow=T)
matriisi<-(c(1,2,3,4,5,6,7,8,9) ncol=3, nrow=3, byrow=T)
matriisi<-matrix(c(1,2,3,4,5,6,7,8,9), ncol=3, nrow=3, byrow=T)
matriisi
matriisi<-matrix(c(1,2,3,4,5,6,7,8,9), ncol=3, nrow=3, byrow=F)
matriisi
??matrix
?matrix
as.matrix(luku)
as.matrix(luku, ncol=2, nrow=2, b=T)
as.matrix(luku, ncol=2, nrow=2, byrow=T)
matriisi<-matrix(c(1,2,3,4,5,6,7,8), ncol=4, nrow=2, byrow=F)
matriisi
str(luku)
sum(luku)
plot(beta(0.01, 0.01))
curve(beta(0.01, 0.01))
?curve
curve(beta(0.01, 0.01), from=0, to=10 )
?beta
beta(0.01, 0.01)
?beta
curve(x^2, from=0, to=2)
curve(dbeta(0.01, 0.01), from=0, to=10 )
?dbeta
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
?dbeta
curve(dbeta(x, 0.01, 0.01, ncp=0), from=0, to=10 )
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
?dbeta
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
curve(dbeta(x, 0.5, 0.5), from=0, to=10 )
curve(dbeta(x, 0.5, 0.5), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1 )
curve(dbeta(x, 5, 1), from=0, to=1 )
curve(dbeta(x, 0.05, 0.01), from=0, to=1 )
curve(dbeta(y, 0.01, 0.01), from=0, to=1 )
curve(dbeta(y, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, add=T, col="orange" )
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, add=T, col="orange" )
?curve
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, col="orange", add=T )
curve(dbeta(x, 1, 1), from=0, to=1, col="red", add=T )
?curve
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, col='red', add=T )
curve(dbeta(x, 1, 1), from=0, to=1, col='blue', add=T )
curve(dbeta(x, 1, 1), from=0, to=1, col='blue', add=T )
curve(dbeta(x, 1, 1), from=0, to=1)
curve(dbeta(x, 1, 1), from=0, to=1, col="blue")
curve(dbeta(x, 2, 2), from=0, to=1, col="pink", add=T)
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, col='blue', add=T )
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1), from=0, to=1, col="pink", add=T )
curve(dbeta(x, 0.01, 0.01), from=0, to=3 )
curve(dbeta(x, 1, 1),col="pink", add=T )
curve(dbeta(x, 2, 2), col="blue", add=T)
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
curve(dbeta(x, 1, 1),col="pink", add=T )
curve(dbeta(x, 2, 2), col="blue", add=T)
curve(dbeta(x, 5, 5), col="blue", add=T)
curve(dbeta(x, 1, 1),from 0 to 1, col="pink", add=F )
curve(dbeta(x, 1, 1),from 0 to 1, col="pink", add=F )
curve(dbeta(x, 1, 1),from =0, to= 1, col="pink", add=F )
curve(dbeta(x, 5, 5), col="blue", add=T)
curve(dbeta(x, 5, 5), from= 0, to=1 col="blue", add=T)
curve(dbeta(x, 5, 5), from= 0, to=1, col="blue", add=F)
curve(dbeta(x, 0.01, 0.01), from=0, to=10 )
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1),from =0, to= 1, col="pink", add=F )
curve(dbeta(x, 5, 5), from= 0, to=1, col="blue", add=F)
curve(dbeta(x, 0.01, 0.01), from=0, to=1 )
curve(dbeta(x, 1, 1),from =0, to= 1, col="pink", add=T )
curve(dbeta(x, 5, 5), from= 0, to=1, col="green", add=T)
curve(dbeta(x, 5, 5), from= 0, to=1, col="green", add=T)
curve(dbeta(x, 5, 5), from= 0, to=1, col="green")
curve(dbeta(x, 0.01, 0.01), from=0, to=1, add=T )
curve(dbeta(x, 1, 1),from =0, to= 1, col="pink", add=T )
curve(dbeta(x, 1, 1),from =0, to= 1, col="red", add=T )
curve(dbeta(x, 7, 6), from= 0, to=1, col="green")
curve(dbeta(x, 2.01, 1.01), from=0, to=1, add=T )
curve(dbeta(x, 3, 2),from =0, to= 1, col="red", add=T )
curve(dbeta(x, 19, 15), from= 0, to=1, col="green")
curve(dbeta(x, 14.01, 11.01), from=0, to=1, add=T )
curve(dbeta(x, 15, 12),from =0, to= 1, col="red", add=T )
?pbeta
pbeta(0.5, 7, 6)
pbeta(0.3, 7, 6)
pbeta(0.5, 2.01, 1.01)
pbeta(0.5, 3, 2)
pbeta(0.5, 7, 6)
pbeta(0.5, 14.01, 11.01)
pbeta(0.5, 15, 12)
pbeta(0.5, 19, 15)
curve(dbeta(x, 5, 5), from= 0, to=1, col="green")
curve(dbeta(x, 0.01, 0.01), from=0, to=1, add=T )
curve(dbeta(x, 1, 1),from =0, to= 1, col="red", add=T )
curve(dbeta(x, 7, 6), from= 0, to=1, col="green")
curve(dbeta(x, 2.01, 1.01), from=0, to=1, add=T )
curve(dbeta(x, 3, 2),from =0, to= 1, col="red", add=T )
curve(dbeta(x, 19, 15), from= 0, to=1, col="green")
curve(dbeta(x, 14.01, 11.01), from=0, to=1, add=T )
curve(dbeta(x, 15, 12),from =0, to= 1, col="red", add=T )
# R-harjoitus 1
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, foreign, descr, stargazer)
ESS2010 <- read.spss("https://helsinkifi-my.sharepoint.com/personal/atoikka_ad_helsinki_fi/_layouts/15/guestaccess.asp
mean(agea$ESS2010)
mean(agea$ESS2010)
1+1
mean(c(4,7,6))
ashlks<-mean(c(4,7,6))
ashlks
learning2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt")
learning2014
students2014<-read.table
(learningFile2014.txt)
getwd()
setwd(C:\Users\Tommy\Desktop\IODS17\IODS-project)
setwd(C:\\Users\\Tommy\\Desktop\\IODS17\\IODS-project)
setwd("C:\\Users\\Tommy\\Desktop\\IODS17\\IODS-project")
getwd()
students2014<-read.table(learningFile2014.txt)
students2014<-read.table("learningFile2014.txt")
students2014
View(students2014)
students2014<-read.table("learningFile2014.txt")
?install.packages
install.packages(ggplot2)
install.packages("ggplot2"")
install.packages("ggplot2")
install.packages("ggplot2")
hist(students2014)
dim(students2014)
# There are 167 observations and 2 variables.
str(students2014)
# Str says that V1 is factor that has  3 levels, "F", "gender" and "M". V2 has 167 levels "age", "attitide"...
View(students2014)
summary(students2014)
str(students2014)
summary(students2014)
lm (points~ Dh+ Aa+ Af, data=students2014)
lm (points~ dh+ Aa+ Af, data=students2014)
lm (points~ Aa+ Af, data=students2014)
lm (points~ aa+ Af, data=students2014)
lm (points~ aa+ af, data=students2014)
lm (points~ v4+ v9, data=students2014)
lm (points~ v4+ v9, data=learning2014)
lm (points~ Dh+ Aa, data=learning2014)
lm (points~ "Dh"+ "Aa", data=learning2014)
learning2014
students2014
lm (points~ Dj+ Age, data=students2014)
my_model2 <- lm(points ~ attitude + stra, data = learning2014)
my_model2 <- lm(points ~ attitude + stra, data =students2014)
stra$students2014
Dh$students2014
students2014
D22$students2014
lm(points~ stra, data=students2014)
lm(points~ Age, data=students2014)
lm(Aa~ Age, data=students2014)
lm(Attitude~ Age, data=students2014)
lm(V28~ V29, data=students2014)
students2014<-read.table("learningFile2014.txt", head=T)
students2014
lm(V183~ V29+ v13+ v15, data=students2014)
lm(V59~ V29+ v13+ v15, data=students2014)
lm(V59~ V29+ V13+ V15, data=students2014)
summary(my_model2)
my_model2 <- lm(points ~ attitude + stra, data =students2014)
mallini<-lm(V59~ V29+ V13+ V15, data=students2014)
summary(my_model2)
summary(mallini)
mallini<-lm(V59~ V29+ V13+ V15, data=students2014)
# Week2 analysis
*Describe the work you have done this week and summarize your learning.*
- Describe your work and results clearly.
- Assume the reader has an introductory course level understanding of writing and reading R code as well as statistical methods
- Assume the reader has no previous knowledge of your data or the more advanced methods you are using
```{r}
setwd("C:\\Users\\Tommy\\Desktop\\IODS17\\IODS-project")
getwd()
students2014<-read.table("learningFile2014.txt", head=T)
dim(students2014)
```
There are 184 observations and 60 variables.
```{r}
str(students2014)
```
Str says how many levels each factor has. For example vi factor has 6 levels (numbers from 1-6)
```{r}
summary(students2014)
```
Here we can see the summary of the data. There you can se further information about each variable and their levels.
```{r}
mallini<-lm(V59~ V29+ V13+ V15, data=students2014)
```
# Week 2 analysis
```{r}
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
```
We can see that Boston-data has 506 observations and 14 variables.
Summary tells us some basic statistics about each 14 variables and pairs shows scatterplot about each varaibles.
Now the data is standardisez so that the mean of each variable is 0.
```{r}
pairs(Boston)
summary(Boston)
```
```{r}
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
```
```{r}
scaled_crim <- boston_scaled$crim
bins <- quantile(scaled_crim)
crime <- cut(scaled_crim, breaks = bins, include.lowest = TRUE)
boston_scaled<- dplyr:: select(boston_scaled, -crim)
boston_scaled<- data.frame(boston_scaled, crime)
n<- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <-test$crime
test <- dplyr::select(test, -crime)
lda.fit<- lda(crime~., data = train)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col=classes, pch= classes)
lda.arrows(lda.fit, myscale = 1)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
```
```{r}
library(MASS)
data("Boston")
str(Boston)
dim(Boston)
```
